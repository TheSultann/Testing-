const TelegramBot = require('node-telegram-bot-api');

// –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_TELEGRAM_BOT_TOKEN' –Ω–∞ –≤–∞—à —Ç–æ–∫–µ–Ω, –µ—Å–ª–∏ –æ–Ω –∏–∑–º–µ–Ω–∏–ª—Å—è
const token = '7230683241:AAF-v7yXhxe55w27TFYaafURaSsTjtgnGHM';
const bot = new TelegramBot(token, { polling: true });

console.log('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...');

// --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ---
const pieTypes = ['–ú—è—Å–æ', '–ö–∞—Ä—Ç–æ—à–∫–∞', '–ö–∞–ø—É—Å—Ç–∞'];

// --- –•—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö ---
let dailyData = {}; // { chatId: { manufactured: {}, remaining: {}, expenses: 0 } }
let userState = {}; // { chatId: { action: null, data: {} } }
let settings = {}; // { chatId: { prices: { '–ú—è—Å–æ': 100, ... } } }

// --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
const mainKeyboard = {
    reply_markup: {
        keyboard: [
            ['‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∏—Ä–æ–∂–∫–∏'],
            ['üì¶ –í–≤–µ—Å—Ç–∏ –æ—Å—Ç–∞—Ç–∫–∏', 'üí∞ –í–≤–µ—Å—Ç–∏ —Ä–∞—Å—Ö–æ–¥—ã'],
            ['üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É', 'üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏']
        ],
        resize_keyboard: true,
        one_time_keyboard: false
    }
};

const pieTypesKeyboard = { // –ò–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö
    reply_markup: {
        inline_keyboard: [
            ...pieTypes.map(type => ([{ text: type, callback_data: `add_pie_${type}` }]))
        ]
    }
};

// --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ù–∞—Å—Ç—Ä–æ–µ–∫ ---
function createSettingsKeyboard(chatId) {
    const currentPrices = settings[chatId]?.prices || {};
    const buttons = pieTypes.map(type => {
        const price = currentPrices[type] !== undefined ? `(${currentPrices[type]} —Ä—É–±.)` : '(–Ω–µ –∑–∞–¥–∞–Ω–∞)';
        return [{ text: `üí≤ ${type} ${price}`, callback_data: `set_price_${type}` }];
    });
    buttons.push([{ text: 'üîô –ù–∞–∑–∞–¥', callback_data: 'back_to_main' }]); // –ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥

    return {
        reply_markup: {
            inline_keyboard: buttons
        }
    };
}


// --- –§—É–Ω–∫—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ---
function initializeChatData(chatId) {
    // –î–∞–Ω–Ω—ã–µ –¥–Ω—è
    if (!dailyData[chatId]) {
        dailyData[chatId] = {
            manufactured: pieTypes.reduce((acc, type) => { acc[type] = 0; return acc; }, {}),
            remaining: pieTypes.reduce((acc, type) => { acc[type] = null; return acc; }, {}),
            expenses: 0
        };
        console.log(`[${chatId}] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–Ω—è.`); // –û–¢–õ–ê–î–ö–ê
    }
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    if (!settings[chatId]) {
        settings[chatId] = {
            prices: pieTypes.reduce((acc, type) => { acc[type] = 0; return acc; }, {}) // –ò–Ω–∏—Ü. —Ü–µ–Ω—ã –Ω—É–ª—è–º–∏
        };
         console.log(`[${chatId}] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.`); // –û–¢–õ–ê–î–ö–ê
    }
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
     if (!userState[chatId]) {
        userState[chatId] = { action: null, data: {} };
        console.log(`[${chatId}] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.`); // –û–¢–õ–ê–î–ö–ê
    }
}

// --- –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Å—Ç–∞—Ç–∫–∞ ---
function askForRemaining(chatId, pieIndex) {
    if (pieIndex < pieTypes.length) {
        const currentPieType = pieTypes[pieIndex];
        userState[chatId] = { action: 'awaiting_remaining_input', data: { currentPieIndex: pieIndex } };
        bot.sendMessage(chatId, `–°–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –ø–∏—Ä–æ–∂–∫–æ–≤ "${currentPieType}"? –í–≤–µ–¥–∏ —á–∏—Å–ª–æ (0, –µ—Å–ª–∏ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å):`);
    } else {
        bot.sendMessage(chatId, '‚úÖ –í—Å–µ –æ—Å—Ç–∞—Ç–∫–∏ –∑–∞–ø–∏—Å–∞–Ω—ã!', mainKeyboard);
        userState[chatId] = { action: null, data: {} }; // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    }
}

// --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π ---

// /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    initializeChatData(chatId);
    bot.sendMessage(chatId, '–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤–µ—Å—Ç–∏ —É—á–µ—Ç –ø–∏—Ä–æ–∂–∫–æ–≤. –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', mainKeyboard);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∫–Ω–æ–ø–∫–∏ –∏ –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö)
bot.on('message', (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;

    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Ç–µ–∫—Å—Ç–∞
    if (!text) {
         console.log(`[${chatId}] –ü–æ–ª—É—á–µ–Ω–æ –Ω–µ—Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.`); // –û–¢–õ–ê–î–ö–ê
        return;
    }

    initializeChatData(chatId);
    const state = userState[chatId];
    const chatData = dailyData[chatId];
    const chatSettings = settings[chatId]; // –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏

    // --- –û–¢–õ–ê–î–ö–ê ---
    console.log(`[${chatId}] –ü–æ–ª—É—á–µ–Ω —Ç–µ–∫—Å—Ç: "${text}" | –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${state?.action || '–Ω–µ—Ç'}`);
    // --- –ö–û–ù–ï–¶ –û–¢–õ–ê–î–ö–ò ---

    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (state && state.action === 'awaiting_pie_quantity') { // --- –í–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ò–ó–ì–û–¢–û–í–õ–ï–ù–ù–´–• ---
        console.log(`[${chatId}] –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è: awaiting_pie_quantity`); // –û–¢–õ–ê–î–ö–ê
        const quantity = parseInt(text, 10);
        if (isNaN(quantity) || quantity <= 0) {
            bot.sendMessage(chatId, '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ (–±–æ–ª—å—à–µ –Ω—É–ª—è).');
            return; // –û—Å—Ç–∞–µ–º—Å—è –≤ —Ç–æ–º –∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è
        }
        const pieType = state.data.type;
        chatData.manufactured[pieType] = (chatData.manufactured[pieType] || 0) + quantity;
        bot.sendMessage(chatId, `‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: ${quantity} –ø–∏—Ä–æ–∂–∫–æ–≤ "${pieType}".\n–í—Å–µ–≥–æ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–æ "${pieType}" —Å–µ–≥–æ–¥–Ω—è: ${chatData.manufactured[pieType]}.`, mainKeyboard);
        userState[chatId] = { action: null, data: {} }; // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
        return;

    } else if (state && state.action === 'awaiting_remaining_input') { // --- –í–≤–æ–¥ –û–°–¢–ê–¢–ö–û–í ---
        console.log(`[${chatId}] –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è: awaiting_remaining_input`); // –û–¢–õ–ê–î–ö–ê
        const quantity = parseInt(text, 10);
        const currentPieIndex = state.data.currentPieIndex;
        const pieType = pieTypes[currentPieIndex];
        const manufacturedCount = chatData.manufactured[pieType] || 0;

        if (isNaN(quantity) || quantity < 0) {
            bot.sendMessage(chatId, `‚ùå –í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ (0 –∏–ª–∏ –±–æ–ª—å—à–µ) –¥–ª—è –æ—Å—Ç–∞—Ç–∫–∞ "${pieType}".`);
            return; // –û—Å—Ç–∞–µ–º—Å—è –≤ —Ç–æ–º –∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∂–¥–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥
        }
        if (quantity > manufacturedCount) {
             bot.sendMessage(chatId, `‚ùå –û—à–∏–±–∫–∞: –æ—Å—Ç–∞—Ç–æ–∫ (${quantity}) –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª—å—à–µ, —á–µ–º –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–æ (${manufacturedCount}) –¥–ª—è –ø–∏—Ä–æ–∂–∫–æ–≤ "${pieType}".\n–ü–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –æ—Å—Ç–∞—Ç–æ–∫ –¥–ª—è "${pieType}" –µ—â–µ —Ä–∞–∑:`);
             return; // –û—Å—Ç–∞–µ–º—Å—è –≤ —Ç–æ–º –∂–µ —Å–æ—Å—Ç–æ—è–Ω–∏–∏, –∂–¥–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥
        }
        chatData.remaining[pieType] = quantity;
        bot.sendMessage(chatId, `üëç –ó–∞–ø–∏—Å–∞–Ω –æ—Å—Ç–∞—Ç–æ–∫ –¥–ª—è "${pieType}": ${quantity}.`);
        askForRemaining(chatId, currentPieIndex + 1); // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –ø–∏—Ä–æ–∂–∫—É
        return;

    } else if (state && state.action === 'awaiting_expenses_input') { // --- –í–≤–æ–¥ –†–ê–°–•–û–î–û–í ---
        console.log(`[${chatId}] –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è: awaiting_expenses_input`); // –û–¢–õ–ê–î–ö–ê
        const amount = parseFloat(text.replace(',', '.')); // –ü–∞—Ä—Å–∏–º —á–∏—Å–ª–æ, –∑–∞–º–µ–Ω—è–µ–º –∑–∞–ø—è—Ç—É—é –Ω–∞ —Ç–æ—á–∫—É –¥–ª—è –¥—Ä–æ–±–Ω—ã—Ö
        if (isNaN(amount) || amount < 0) {
            bot.sendMessage(chatId, '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–æ–≤ (—á–∏—Å–ª–æ, 0 –∏–ª–∏ –±–æ–ª—å—à–µ).');
            return; // –û—Å—Ç–∞–µ–º—Å—è –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –≤–≤–æ–¥–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤
        }
        chatData.expenses = amount; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–∞—Å—Ö–æ–¥—ã
        bot.sendMessage(chatId, `‚úÖ –†–∞—Å—Ö–æ–¥—ã –∑–∞ –¥–µ–Ω—å (${amount}) –∑–∞–ø–∏—Å–∞–Ω—ã.`, mainKeyboard); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        userState[chatId] = { action: null, data: {} }; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        return;

    } else if (state && state.action === 'awaiting_price_input') { // --- –í–≤–æ–¥ –¶–ï–ù–´ ---
        console.log(`[${chatId}] –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è: awaiting_price_input`); // –û–¢–õ–ê–î–ö–ê
        const price = parseFloat(text.replace(',', '.'));
        const pieType = state.data.type;

        if (isNaN(price) || price < 0) {
             bot.sendMessage(chatId, '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É (—á–∏—Å–ª–æ, 0 –∏–ª–∏ –±–æ–ª—å—à–µ).');
            return; // –û—Å—Ç–∞–µ–º—Å—è –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –≤–≤–æ–¥–∞ —Ü–µ–Ω—ã
        }
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ü–µ–Ω—É –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        if (!chatSettings.prices) chatSettings.prices = {}; // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–±—ä–µ–∫—Ç —Ü–µ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        chatSettings.prices[pieType] = price;
        bot.sendMessage(chatId, `‚úÖ –¶–µ–Ω–∞ –¥–ª—è –ø–∏—Ä–æ–∂–∫–æ–≤ "${pieType}" —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: ${price} —Ä—É–±.`);
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
        userState[chatId] = { action: null, data: {} }; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        const settingsKeyboard = createSettingsKeyboard(chatId);
        bot.sendMessage(chatId, '–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ü–µ–Ω:', settingsKeyboard);
        return;
    }

    // --- –û–¢–õ–ê–î–ö–ê ---
    // –ï—Å–ª–∏ –º—ã –¥–æ—à–ª–∏ —Å—é–¥–∞, –∑–Ω–∞—á–∏—Ç, –Ω–∏ –æ–¥–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ
    console.log(`[${chatId}] –°–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è —Ç–µ–∫—Å—Ç–∞: "${text}"`);
    // --- –ö–û–ù–ï–¶ –û–¢–õ–ê–î–ö–ò ---

    // 2. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ)
    switch (text) {
        case '‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–∏—Ä–æ–∂–∫–∏':
            console.log(`[${chatId}] –°—Ä–∞–±–æ—Ç–∞–ª–æ –º–µ–Ω—é: –î–æ–±–∞–≤–∏—Ç—å –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ`); // –û–¢–õ–ê–î–ö–ê
            bot.sendMessage(chatId, '–ö–∞–∫–æ–π —Ç–∏–ø –ø–∏—Ä–æ–∂–∫–æ–≤ –∏–∑–≥–æ—Ç–æ–≤–∏–ª–∏?', pieTypesKeyboard);
            break;
        case 'üì¶ –í–≤–µ—Å—Ç–∏ –æ—Å—Ç–∞—Ç–∫–∏':
            console.log(`[${chatId}] –°—Ä–∞–±–æ—Ç–∞–ª–æ –º–µ–Ω—é: –í–≤–µ—Å—Ç–∏ –æ—Å—Ç–∞—Ç–∫–∏`); // –û–¢–õ–ê–î–ö–ê
            bot.sendMessage(chatId, '–ù–∞—á–∏–Ω–∞–µ–º –≤–≤–æ–¥ –æ—Å—Ç–∞—Ç–∫–æ–≤...');
            askForRemaining(chatId, 0);
            break;
        case 'üí∞ –í–≤–µ—Å—Ç–∏ —Ä–∞—Å—Ö–æ–¥—ã':
            console.log(`[${chatId}] –°—Ä–∞–±–æ—Ç–∞–ª–æ –º–µ–Ω—é: –í–≤–µ—Å—Ç–∏ —Ä–∞—Å—Ö–æ–¥—ã`); // –û–¢–õ–ê–î–ö–ê
            userState[chatId] = { action: 'awaiting_expenses_input', data: {} };
            bot.sendMessage(chatId, '–í–≤–µ–¥–∏ –æ–±—â—É—é —Å—É–º–º—É —Ä–∞—Å—Ö–æ–¥–æ–≤ –∑–∞ –¥–µ–Ω—å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 500 –∏–ª–∏ 125.50):');
            break;
        case 'üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É':
            console.log(`[${chatId}] –°—Ä–∞–±–æ—Ç–∞–ª–æ –º–µ–Ω—é: –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É`); // –û–¢–õ–ê–î–ö–ê
            let report = 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n';
            let allRemainingsEntered = true;
            let totalRevenue = 0; // –î–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –≤—ã—Ä—É—á–∫–∏

            pieTypes.forEach(type => {
                const manufactured = chatData.manufactured[type] || 0;
                const remaining = chatData.remaining[type];
                const price = chatSettings.prices[type] || 0; // –ë–µ—Ä–µ–º —Ü–µ–Ω—É –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫

                report += `–ü–∏—Ä–æ–∂–∫–∏ "${type}" (—Ü–µ–Ω–∞: ${price} —Ä—É–±.):\n`; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ü–µ–Ω—É
                report += `- –ò–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–æ: ${manufactured}\n`;

                if (remaining !== null) {
                    const sold = manufactured - remaining;
                    const revenue = sold * price;
                    totalRevenue += revenue; // –°—É–º–º–∏—Ä—É–µ–º –≤—ã—Ä—É—á–∫—É
                    report += `- –û—Å—Ç–∞—Ç–æ–∫: ${remaining}\n`;
                    report += `- –ü—Ä–æ–¥–∞–Ω–æ: ${sold} —à—Ç.\n`;
                    report += `- –í—ã—Ä—É—á–∫–∞ (${type}): ${revenue} —Ä—É–±.\n\n`;
                } else {
                    report += `- –û—Å—Ç–∞—Ç–æ–∫: (–Ω–µ –≤–≤–µ–¥–µ–Ω)\n`;
                    report += `- –ü—Ä–æ–¥–∞–Ω–æ: (–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ)\n\n`;
                    allRemainingsEntered = false;
                }
            });

            report += `–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: ${totalRevenue} —Ä—É–±.\n`;
            report += `üí∏ –†–∞—Å—Ö–æ–¥—ã –∑–∞ –¥–µ–Ω—å: ${chatData.expenses} —Ä—É–±.\n`;

            if (allRemainingsEntered) {
                const profit = totalRevenue - chatData.expenses;
                report += `üìà –ß–∏—Å—Ç–∞—è –ø—Ä–∏–±—ã–ª—å: ${profit} —Ä—É–±.\n\n`;
            } else {
                 report += '‚ö†Ô∏è –ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —á–∏—Å—Ç—É—é –ø—Ä–∏–±—ã–ª—å, –≤–≤–µ–¥–∏—Ç–µ –æ—Å—Ç–∞—Ç–∫–∏ –ø–æ –≤—Å–µ–º —Ç–∏–ø–∞–º.\n\n';
            }

            bot.sendMessage(chatId, report, mainKeyboard); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç—á–µ—Ç
            break;
        case 'üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏':
            console.log(`[${chatId}] –°—Ä–∞–±–æ—Ç–∞–ª–æ –º–µ–Ω—é: –ù–∞—Å—Ç—Ä–æ–π–∫–∏`); // –û–¢–õ–ê–î–ö–ê
            const settingsKeyboard = createSettingsKeyboard(chatId);
            bot.sendMessage(chatId, '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ü–µ–Ω –Ω–∞ –ø–∏—Ä–æ–∂–∫–∏:', settingsKeyboard);
            break;
        default:
             // –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –Ω–∏ –æ–¥–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é –∏ –Ω–∏ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ
             console.log(`[${chatId}] –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–ª–∏ –∫–æ–º–∞–Ω–¥–∞: "${text}"`); // –û–¢–õ–ê–î–ö–ê
             // –ú–æ–∂–Ω–æ —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
             // bot.sendMessage(chatId, '–ù–µ –ø–æ–Ω–∏–º–∞—é –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏.');
             break;
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–æ–∫
bot.on('callback_query', (callbackQuery) => {
    const msg = callbackQuery.message;
    const chatId = msg.chat.id;
    const data = callbackQuery.data;

    initializeChatData(chatId); // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –≤—Å–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ

    console.log(`[${chatId}] –ü–æ–ª—É—á–µ–Ω callback_query: ${data}`); // –û–¢–õ–ê–î–ö–ê

    if (data.startsWith('add_pie_')) { // --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã—Ö ---
        const pieType = data.split('_')[2];
        userState[chatId] = { action: 'awaiting_pie_quantity', data: { type: pieType } };
        bot.sendMessage(chatId, `–°–∫–æ–ª—å–∫–æ –ø–∏—Ä–æ–∂–∫–æ–≤ "${pieType}" –∏–∑–≥–æ—Ç–æ–≤–∏–ª–∏? –í–≤–µ–¥–∏ —á–∏—Å–ª–æ:`);
        // –ü—ã—Ç–∞–µ–º—Å—è —É–±—Ä–∞—Ç—å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è, –≥–¥–µ –±—ã–ª–∞ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞
        bot.editMessageReplyMarkup({ inline_keyboard: [] }, { chat_id: chatId, message_id: msg.message_id })
           .catch(e => console.log(`[${chatId}] Warning: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –∫–Ω–æ–ø–∫–∏. ${e.message}`)); // –ú—è–≥–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
        bot.answerCallbackQuery(callbackQuery.id);

    } else if (data.startsWith('set_price_')) { // --- –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–µ–Ω—ã ---
        const pieType = data.split('_')[2];
        userState[chatId] = { action: 'awaiting_price_input', data: { type: pieType } }; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        bot.sendMessage(chatId, `–í–≤–µ–¥–∏ –Ω–æ–≤—É—é —Ü–µ–Ω—É –¥–ª—è –ø–∏—Ä–æ–∂–∫–æ–≤ "${pieType}" (–Ω–∞–ø—Ä–∏–º–µ—Ä, 100 –∏–ª–∏ 85.50):`);
        // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫, —É–±–∏—Ä–∞—è –∫–Ω–æ–ø–∫–∏ –∏ —É–∫–∞–∑—ã–≤–∞—è –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞
        bot.editMessageText(`‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ü–µ–Ω –Ω–∞ –ø–∏—Ä–æ–∂–∫–∏:\n\n(–í–≤–µ–¥–∏ –Ω–æ–≤—É—é —Ü–µ–Ω—É –¥–ª—è "${pieType}")`, { chat_id: chatId, message_id: msg.message_id, reply_markup: { inline_keyboard: [] } })
           .catch(e => console.log(`[${chatId}] Warning: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç/–∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫. ${e.message}`)); // –ú—è–≥–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
        bot.answerCallbackQuery(callbackQuery.id);

    } else if (data === 'back_to_main') { // --- –ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö ---
         // –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è
         bot.editMessageText('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...', { chat_id: chatId, message_id: msg.message_id, reply_markup: { inline_keyboard: [] } })
            .catch(e => console.log(`[${chatId}] Warning: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç/–∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ. ${e.message}`)); // –ú—è–≥–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
         bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:', mainKeyboard); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
         bot.answerCallbackQuery(callbackQuery.id);
    }
    // –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É 'reset_daily_data', –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
});


// --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ --- (–±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–∞—è)
bot.on('polling_error', (error) => {
  console.error(`[Polling Error] Code: ${error.code} | Message: ${error.message}`);
  // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–ª–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
});

bot.on('webhook_error', (error) => {
  console.error(`[Webhook Error] Code: ${error.code} | Message: ${error.message}`);
});

bot.on("error", (err) => {
  console.error("[General Bot Error]", err);
});

process.on('uncaughtException', (error, origin) => {
  console.error(`\n–ù–µ–ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: ${error}`);
  console.error(`–ò—Å—Ç–æ—á–Ω–∏–∫: ${origin}`);
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
  // process.exit(1); // –†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã—Ö–æ–¥–∞, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è
});

process.on('unhandledRejection', (reason, promise) => {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π reject –ø—Ä–æ–º–∏—Å–∞:', promise);
  console.error(`–ü—Ä–∏—á–∏–Ω–∞: ${reason}`);
});